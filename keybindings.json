[
  {
    "key": "shift+escape",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "alt+down",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "cursorBottomSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+alt+down",
    "command": "cursorColumnSelectDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+alt+left",
    "command": "cursorColumnSelectLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+alt+pagedown",
    "command": "cursorColumnSelectPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+alt+pageup",
    "command": "cursorColumnSelectPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+alt+right",
    "command": "cursorColumnSelectRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+alt+up",
    "command": "cursorColumnSelectUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "end",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+end",
    "command": "cursorEndSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+home",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+left",
    "command": "cursorLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "cursorPageDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "cursorPageUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+right",
    "command": "cursorRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+up",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+backspace",
    "command": "deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+delete",
    "command": "deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "delete",
    "command": "deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+a",
    "command": "editor.action.selectAll",
    "when": "textInputFocus"
  },
  {
    "key": "alt+c",
    "command": "execCopy"
  },
  {
    "key": "alt+x",
    "command": "execCut"
  },
  {
    "key": "alt+v",
    "command": "execPaste"
  },
  {
    "key": "alt+l",
    "command": "expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+o",
    "command": "lineBreakInsert",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+z",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+pagedown",
    "command": "scrollLineDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+pageup",
    "command": "scrollLineUp",
    "when": "textInputFocus"
  },
  {
    "key": "alt+pagedown",
    "command": "scrollPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+pageup",
    "command": "scrollPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "alt+z",
    "command": "undo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+left",
    "command": "cursorColumnSelectLeft",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "cursorColumnSelectPageUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+up",
    "command": "cursorColumnSelectUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "f4",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift+f4",
    "command": "goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "alt+f",
    "command": "actions.find"
  },
  {
    "key": "alt+e",
    "command": "actions.findWithSelection"
  },
  {
    "key": "shift+escape",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+u",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "windows+right",
    "command": "cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+right",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+windows+left",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+windows+left",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+windows+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+windows+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "windows+left",
    "command": "cursorWordStartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+windows+left",
    "command": "cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+delete",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "windows+backspace",
    "command": "deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+windows+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+windows+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "windows+delete",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+k alt+c",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "windows+alt+.",
    "command": "editor.action.autoFix",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "shift+windows+a",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f2",
    "command": "editor.action.changeAll",
    "when": "editorTextFocus && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "textInputFocus"
  },
  {
    "key": "alt+x",
    "command": "editor.action.clipboardCutAction",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+windows+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+windows+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+z",
    "command": "editor.action.customEditor.redo",
    "when": "focusedCustomEditorIsEditable && !inputFocus"
  },
  {
    "key": "alt+z",
    "command": "editor.action.customEditor.undo",
    "when": "focusedCustomEditorIsEditable && !inputFocus"
  },
  {
    "key": "alt+k alt+k",
    "command": "editor.action.defineKeybinding",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.diffReview.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+windows+f3",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.extensioneditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "alt+f",
    "command": "editor.action.extensioneditor.showfind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "shift+windows+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+windows+f",
    "command": "editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "alt+k alt+f",
    "command": "editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f12",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+.",
    "command": "editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+,",
    "command": "editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "windows+alt+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "windows+alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+\\",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "windows+f8",
    "command": "editor.action.marker.next",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "f8",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "shift+windows+f8",
    "command": "editor.action.marker.prev",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "shift+f8",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus && !editorReadonly"
  },
  {
    "key": "windows+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k alt+d",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+g",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "enter",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "alt+f3",
    "command": "editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "alt+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "windows+f12",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+f12",
    "command": "editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+g",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "shift+alt+f3",
    "command": "editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "alt+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k alt+u",
    "command": "editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f12",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+k f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+l",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "windows+f1",
    "command": "editor.action.showAccessibilityHelp",
    "when": "editorFocus"
  },
  {
    "key": "alt+k alt+i",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "windows+alt+f",
    "command": "editor.action.startFindReplaceAction"
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "windows+escape",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+k alt+x",
    "command": "editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+c",
    "command": "editor.action.webvieweditor.copy",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "alt+x",
    "command": "editor.action.webvieweditor.cut",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.webvieweditor.findPrevious",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "alt+v",
    "command": "editor.action.webvieweditor.paste",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+alt+z",
    "command": "editor.action.webvieweditor.redo",
    "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "alt+a",
    "command": "editor.action.webvieweditor.selectAll",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "alt+f",
    "command": "editor.action.webvieweditor.showFind",
    "when": "!editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "alt+z",
    "command": "editor.action.webvieweditor.undo",
    "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "shift+f7",
    "command": "editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "key": "alt+k alt+i",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "f9",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "windows+alt+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+0",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+/",
    "command": "editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+8",
    "command": "editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+1",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+4",
    "command": "editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+5",
    "command": "editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+6",
    "command": "editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+7",
    "command": "editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+[",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "escape",
    "command": "editor.gotoNextSymbolFromResult.cancel",
    "when": "hasSymbols"
  },
  {
    "key": "alt+k alt+l",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "windows+alt+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+j",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+9",
    "command": "editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+k alt+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "enter",
    "command": "repl.action.acceptInput",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "alt+f",
    "command": "repl.action.filter",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "escape",
    "command": "settings.action.clearSearchResults",
    "when": "inSettingsSearch"
  },
  {
    "key": "alt+.",
    "command": "settings.action.editFocusedSetting",
    "when": "inSettingsSearch"
  },
  {
    "key": "shift+enter",
    "command": "settings.action.focusPreviousSetting",
    "when": "inSettingsSearch"
  },
  {
    "key": "alt+f",
    "command": "settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "alt+/",
    "command": "toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "alt+k f2",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift+windows+f5",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "alt+enter",
    "command": "workbench.action.submitComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "shift+escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "escape",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "windows+alt+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "shift+alt+1",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "windows+enter",
    "command": "editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "windows+alt+c",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "windows+alt+l",
    "command": "toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "windows+alt+r",
    "command": "toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "windows+alt+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "shift+tab",
    "command": "jumpToPrevSnippetPlaceholder",
    "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
  },
  {
    "key": "shift+escape",
    "command": "leaveSnippet",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "shift+escape",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "shift+escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "escape",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "up",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "shift+enter",
    "command": "acceptwindowsernativeSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  },
  {
    "key": "enter",
    "command": "acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "insertBestCompletion",
    "when": "atEndOfWord && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "shift+tab",
    "command": "insertPrevSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "alt+pagedown",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+down",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+pageup",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+up",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "enter",
    "command": "acceptRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "escape",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "shift+alt+l",
    "command": "addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "shift+alt+;",
    "command": "breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+alt+.",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "windows+right",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "windows+left",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "alt+enter",
    "command": "breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "alt+enter",
    "command": "breadcrumbs.revealFocusedFromTreeAside",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "enter",
    "command": "breadcrumbs.selectFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "shift+alt+.",
    "command": "breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "escape",
    "command": "closeAccessibilityHelp",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "key": "windows+alt+c",
    "command": "copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "shift+windows+alt+c",
    "command": "copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "alt+enter",
    "command": "debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "alt+backspace",
    "command": "debug.removeBreakpoint",
    "when": "breakpointsFocused && !breakpointSelected"
  },
  {
    "key": "alt+backspace",
    "command": "debug.removeWatchExpression",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "key": "shift+enter",
    "command": "editor.refocusCallHierarchy",
    "when": "callHierarchyVisible"
  },
  {
    "key": "shift+windows+h",
    "command": "editor.toggleCallHierarchy",
    "when": "callHierarchyVisible"
  },
  {
    "key": "shift+windows+f",
    "command": "filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "down",
    "command": "history.showNext",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "up",
    "command": "history.showPrevious",
    "when": "historyNavigationEnabled && historyNavigationWidget"
  },
  {
    "key": "alt+c",
    "command": "keybindings.editor.copyKeybindingEntry",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "alt+k alt+k",
    "command": "keybindings.editor.defineKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "alt+k alt+e",
    "command": "keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "down",
    "command": "keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "windows+alt+k",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+k alt+backspace",
    "command": "keybindings.editor.removeKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "alt+f",
    "command": "keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "windows+alt+p",
    "command": "keybindings.editor.toggleSortByPrecedence",
    "when": "inKeybindings"
  },
  {
    "key": "alt+up",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "left",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+left",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+down",
    "command": "list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "down",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "end",
    "command": "list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "pageup",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+down",
    "command": "list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+up",
    "command": "list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+down",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+a",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "shift+alt+enter",
    "command": "list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "notification.clear",
    "when": "notificationFocus"
  },
  {
    "key": "right",
    "command": "notification.expand",
    "when": "notificationFocus"
  },
  {
    "key": "space",
    "command": "notification.toggle",
    "when": "notificationFocus"
  },
  {
    "key": "pageup",
    "command": "notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "pagedown",
    "command": "notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "up",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "alt+c",
    "command": "problems.action.copy",
    "when": "problemFocus"
  },
  {
    "key": "alt+f",
    "command": "problems.action.focusFilter",
    "when": "problemsViewFocus"
  },
  {
    "key": "alt+down",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  {
    "key": "alt+.",
    "command": "problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "shift+alt+r",
    "command": "rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "windows+alt+r",
    "command": "revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "alt+enter",
    "command": "scm.acceptInput",
    "when": "scmRepository"
  },
  {
    "key": "escape",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus"
  },
  {
    "key": "alt+c",
    "command": "search.action.copyMatch",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "key": "windows+alt+c",
    "command": "search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "key": "shift+f4",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "alt+up",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "alt+enter",
    "command": "search.action.openInEditor",
    "when": "hasSearchResult && searchViewletFocus"
  },
  {
    "key": "alt+backspace",
    "command": "search.action.remove",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "shift+alt+1",
    "command": "search.action.replace",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "windows+alt+enter",
    "command": "search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "shift+alt+enter",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+alt+1",
    "command": "search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+alt+enter",
    "command": "search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+alt+1",
    "command": "search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "alt+down",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "alt+up",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "shift+alt+l",
    "command": "selectAllSearchEditorMatches",
    "when": "inSearchEditor"
  },
  {
    "key": "enter",
    "command": "settings.action.focusSettingsList",
    "when": "inSettingsEditor && settingsTocRowFocus"
  },
  {
    "key": "windows+alt+c",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "windows+alt+c",
    "command": "toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "windows+alt+l",
    "command": "toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "windows+alt+r",
    "command": "toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "windows+alt+w",
    "command": "toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "windows+alt+r",
    "command": "toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  {
    "key": "windows+alt+w",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "alt+k alt+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "alt+k shift+alt+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "alt+k w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "alt+k f",
    "command": "workbench.action.closeFolder"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "windows+alt+t",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "escape",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+k u",
    "command": "workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "shift+alt+w",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "shift+windows+f5",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "shift+alt+f5",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+f5",
    "command": "workbench.action.debug.run"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.start",
    "when": "!inDebugMode"
  },
  {
    "key": "f10",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f5",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode"
  },
  {
    "key": "alt+k m",
    "command": "workbench.action.editor.changeLanguageMode"
  },
  {
    "key": "alt+k p",
    "command": "workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+o",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "alt+o",
    "command": "workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "alt+k r",
    "command": "workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "windows+alt+s",
    "command": "workbench.action.files.saveAll"
  },
  {
    "key": "shift+alt+s",
    "command": "workbench.action.files.saveAs"
  },
  {
    "key": "shift+alt+s",
    "command": "workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "alt+k s",
    "command": "workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "alt+k o",
    "command": "workbench.action.files.showOpenedFileInNewWindow"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "alt+k alt+up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "alt+k alt+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "alt+8",
    "command": "workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "alt+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "alt+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "alt+k alt+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "alt+k alt+right",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "alt+7",
    "command": "workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "alt+0",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "alt+6",
    "command": "workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "alt+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "shift+alt+o",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "down",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "alt+k enter",
    "command": "workbench.action.keepEditor"
  },
  {
    "key": "alt+k alt+r",
    "command": "workbench.action.keybindingsReference"
  },
  {
    "key": "alt+9",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.lastEditorInGroup"
  },
  {
    "key": "alt+k down",
    "command": "workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "alt+k left",
    "command": "workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "alt+k right",
    "command": "workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "alt+k up",
    "command": "workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "alt+k shift+alt+left",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "alt+k shift+alt+right",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+alt+1",
    "command": "workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+alt+9",
    "command": "workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+alt+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+shift+-",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "alt+k alt+q",
    "command": "workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "shift+alt+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "shift+alt+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "windows+alt+right",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+k windows+alt+right",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "alt+k alt+s",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "alt+,",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "shift+alt+u",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "shift+alt+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "windows+alt+left",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+k windows+alt+left",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenView"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.quit"
  },
  {
    "key": "shift+alt+t",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+alt+j",
    "command": "workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "alt+k alt+t",
    "command": "workbench.action.selectTheme"
  },
  {
    "key": "windows+alt+tab",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "shift+alt+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+\\",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "alt+k alt+\\",
    "command": "workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.switchWindow"
  },
  {
    "key": "shift+alt+b",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.clearSelection",
    "when": "terminalFocus && terminwindowsextSelected && !terminalFindWidgetVisible"
  },
  {
    "key": "alt+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminwindowsextSelected"
  },
  {
    "key": "alt+backspace",
    "command": "workbench.action.terminal.deleteToLineStart",
    "when": "terminalFocus"
  },
  {
    "key": "windows+backspace",
    "command": "workbench.action.terminal.deleteWordLeft",
    "when": "terminalFocus"
  },
  {
    "key": "windows+delete",
    "command": "workbench.action.terminal.deleteWordRight",
    "when": "terminalFocus"
  },
  {
    "key": "shift+enter",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "f3",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFocus"
  },
  {
    "key": "f3",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+g",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFocus"
  },
  {
    "key": "alt+g",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "enter",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+f3",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "shift+f3",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+alt+g",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "shift+alt+g",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "alt+f",
    "command": "workbench.action.terminal.focusFindWidget",
    "when": "terminalFocus"
  },
  {
    "key": "alt+f",
    "command": "workbench.action.terminal.focusFindWidget",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "windows+alt+down",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+right",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+up",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+left",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "shift+escape",
    "command": "workbench.action.terminal.hideFindWidget",
    "when": "terminalFindWidgetVisible && terminalFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.hideFindWidget",
    "when": "terminalFindWidgetVisible && terminalFocus"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.terminal.moveToLineEnd",
    "when": "terminalFocus"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.terminal.moveToLineStart",
    "when": "terminalFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.terminal.navigationModeExit",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalFocus"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.terminal.navigationModeFocusPrevious",
    "when": "accessibilityModeEnabled && terminalFocus"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.terminal.navigationModeFocusPrevious",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "shift+alt+c",
    "command": "workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+pagedown",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus"
  },
  {
    "key": "alt+end",
    "command": "workbench.action.terminal.scrollToBottom",
    "when": "terminalFocus"
  },
  {
    "key": "alt+down",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+up",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+home",
    "command": "workbench.action.terminal.scrollToTop",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+pageup",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus"
  },
  {
    "key": "alt+a",
    "command": "workbench.action.terminal.selectAll",
    "when": "terminalFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+5",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "alt+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "windows+alt+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+r",
    "command": "workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "windows+alt+r",
    "command": "workbench.action.terminal.toggleFindRegex",
    "when": "terminalFocus"
  },
  {
    "key": "windows+alt+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "windows+alt+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "windows+alt+0",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "ctrl+alt+f",
    "command": "workbench.action.toggleFullScreen"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+alt+w",
    "command": "workbench.action.toggleTabsVisibility"
  },
  {
    "key": "alt+k z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "alt+numpad_add",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "shift+alt+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "alt+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "alt+numpad_subtract",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "shift+alt+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "alt+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "alt+numpad0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "shift+alt+m",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "shift+alt+y",
    "command": "workbench.debug.action.toggleRepl"
  },
  {
    "key": "alt+k alt+m",
    "command": "workbench.extensions.action.showRecommendedKeymapExtensions"
  },
  {
    "key": "alt+k c",
    "command": "workbench.files.action.compareWithClipboard"
  },
  {
    "key": "alt+k d",
    "command": "workbench.files.action.compareWithSaved"
  },
  {
    "key": "alt+k e",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "shift+alt+d",
    "command": "workbench.view.debug"
  },
  {
    "key": "shift+alt+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "shift+alt+x",
    "command": "workbench.view.extensions"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.view.search",
    "when": "!searchViewletVisible"
  },
  {
    "key": "windows+right",
    "command": "breadcrumbs.focusNextWithPicker",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "windows+left",
    "command": "breadcrumbs.focusPreviousWithPicker",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  {
    "key": "enter",
    "command": "debug.renameWatchExpression",
    "when": "watchExpressionsFocused"
  },
  {
    "key": "enter",
    "command": "debug.setVariable",
    "when": "variablesFocused"
  },
  {
    "key": "windows+alt+backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+c",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "alt+x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "alt+v",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "end",
    "command": "lastCompressedFolder",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "moveFileToTrash",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "left",
    "command": "previousCompressedFolder",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "remote.tunnel.closeInline",
    "when": "tunnelCloseable && tunnelViewFocus"
  },
  {
    "key": "alt+c",
    "command": "remote.tunnel.copyAddressInline",
    "when": "tunnelViewFocus && tunnelType == 'Detected' || tunnelViewFocus && tunnelType == 'Forwarded'"
  },
  {
    "key": "enter",
    "command": "remote.tunnel.label",
    "when": "tunnelViewFocus && tunnelType == 'Forwarded'"
  },
  {
    "key": "enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+escape",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "escape",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "escape",
    "command": "notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "shift+alt+p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "windows+alt+i",
    "command": "workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "alt+f4",
    "command": "extension.node-debug.pickLoadedScript",
    "when": "debugType == 'node2'"
  },
  {
    "key": "f10",
    "command": "extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "shift+alt+v",
    "command": "markdown.showPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+windows+f12",
    "command": "references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "f11",
    "command": "extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "alt+k v",
    "command": "markdown.showPreviewToSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "f4",
    "command": "references-view.next",
    "when": "reference-list.hasResult"
  },
  {
    "key": "shift+f4",
    "command": "references-view.prev",
    "when": "reference-list.hasResult"
  },
  {
    "key": "shift+alt+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  }
]
